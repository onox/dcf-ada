-- This is a GNAT, GCC or GNAT Programming Studio (GPS) project file
-- for the Zip-Ada project ( http://unzip-ada.sf.net/ )
-- Build me with "gprbuild -P zipada", or open me with GPS
--
project ZipAda is

   type Build_Mode_Type is
      ("Debug", "Fast", "Profiling",
       --  This is for checking that the *library* is Ada 95 compliant.
       --  The tools & tests are using some Ada 2005 & 2012 features.
       "Check_95"  
      );
   Build_Mode : Build_Mode_Type := external ("Build_Mode", "Fast");
   for Exec_Dir use ".";
   
   case Build_Mode is
      when "Check_95" =>
         for Source_Dirs use ("zip_lib");
         for Main use ();
      when others =>
         for Source_Dirs use (".", "zip_lib", "test", "extras", "tools", "demo");
         for Main use (
           "zipada.adb", "comp_zip.adb", "find_zip.adb",
           "rezip.adb", "demo_csv_into_zip.adb", "demo_zip.adb",
           "demo_unzip.adb", "test_unz_streams.adb",
           "fuzzip.adb",
           "test_chunk.adb", "ziptest.adb", "zip_with_many_files.adb",
           "test_zip_info_timing.adb",
           "test_stream_performance.adb",
           "test_extract.adb", 
           "test_extract_tb.ads",
           --  Trace-Back-enabled version of some tools
           "za_gnat.ads", 
           "rz_gnat.ads", 
           --  Misc.
           "bunzip",   --  Standalone BZip2 decoder (for .bz2 files)
           "lz",       --  A simple LZ-Huffman coder/decoder
           "lzma_dec", --  LZMA decoder
           "lzma_enc", --  LZMA encoder
           "test_lz_scramble",  --  Test LZ_Scramble
           "test_llhc",         --  Test for Length_limited_Huffman_code_lengths
           "test_lz77.adb",     --  Test the LZ77 package
           "lz77_stats.adb",    --  Gather some statistics about LZ77 DLE codes and output it in a matrix form
           "random_data.adb",   --  Produces n bytes of pseudo-random data
           "several_sizes.adb"  --  Truncates a file into partial copies of several sizes
           -- "demo_csv_gnat.ads",
           -- "unzipada.adb", "uza_gnat.ads"
         );
   end case;

   case Build_Mode is

      when "Debug" | "Check_95" =>
         for Object_Dir use "obj_dbg";

      when "Fast" =>
         for Object_Dir use "obj_opt";

      when "Profiling" =>
         for Object_Dir use "obj_pro";
   end case;

   package Binder is

      case Build_Mode is

         when "Debug" | "Check_95" =>
            for Default_Switches ("ada") use ("-E");

         when "Fast" =>

         when "Profiling" =>

      end case;
   end Binder;

   package Linker is

      case Build_Mode is

         when "Debug" | "Check_95" =>
            for Default_Switches ("ada") use ("-g");

         when "Fast" =>
            for Default_Switches ("ada") use ("-s", "-Wl,--gc-sections");

         when "Profiling" =>
            for Default_Switches ("ada") use ("-pg");
      end case;
   end Linker;

   package Compiler is

      case Build_Mode is

         when "Check_95" => for Default_Switches ("ada") use ("-gnat95", "-gnatwa");
      
         when "Debug" =>
            for Default_Switches ("ada") use (
              "-gnatyaknpr",  --  Style: check all casings: a:attribute, k:keywords, n:package Standard identifiers, p:pragma, r:identifier references
              "-gnatybfhiu",  --  Style: check b:no blanks at end of lines, f:no ff/vtabs, h: no htabs, i:if-then layout, u:no unnecessary blank lines
              "-gnatyx",      --  Style: check x:no extra parens
              "-gnatye",      --  Style: check e:end/exit labels present
              "-gnat12", "-gnatf", "-gnato", 
              "-fstack-check", "-g", "-gnatwa", "-gnatVa",
              "-gnatec../debug.pra"
              );

         when "Fast" =>
            for Default_Switches ("ada") use (
              "-gnat12", "-O2", "-gnatp", "-gnatn", 
              "-funroll-loops", "-fpeel-loops", "-funswitch-loops", "-ftracer", "-fweb", "-frename-registers", 
              "-fpredictive-commoning", "-fgcse-after-reload", "-ftree-vectorize", "-fipa-cp-clone",
              "-ffunction-sections", 
              "-gnatec../za_elim.pra"
              );

         when "Profiling" =>
            for Default_Switches ("ada") use (
              "-gnat12", "-O2", "-gnatp",  
              "-fno-inline", 
              "-funroll-loops", "-fpeel-loops", "-funswitch-loops", "-ftracer", "-fweb", "-frename-registers",
              "-fpredictive-commoning", "-fgcse-after-reload", "-ftree-vectorize", "-fipa-cp-clone",
              "-g", "-pg"
              );
      end case;
   end Compiler;

   package Builder is
      for Default_Switches ("ada") use ("-j3", "-C");  --  use 3 cores/CPUs when available
   end Builder;

   package Ide is
      for Default_Switches ("adacontrol") use ("-f", "verif.aru");
      for Vcs_Kind use "Subversion";
   end Ide;
   
end ZipAda;

